// Generated from ./WACCLexer.g4 by ANTLR 4.4
package antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class WACCLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		PLUS=1, MINUS=2, MUL=3, DIV=4, MOD=5, EQUAL=6, PLUSEQUAL=7, MINUSEQUAL=8, 
		GREATER_EQUAL=9, GREATER=10, LESS_EQUAL=11, LESS=12, DOUBLE_EQUALS=13, 
		NOT_EQUAL=14, AND=15, OR=16, NOT=17, LEN=18, ORD=19, CHR=20, PLUSPLUS=21, 
		MINUSMINUS=22, TRUE=23, FALSE=24, INT=25, BOOL=26, CHAR=27, STRING=28, 
		PAIR=29, OPEN_PARENTHESES=30, CLOSE_PARENTHESES=31, OPEN_SQUARE=32, CLOSE_SQUARE=33, 
		INTEGER=34, BEGIN=35, END=36, IS=37, SKIP=38, READ=39, FREE=40, RETURN=41, 
		EXIT=42, PRINTLN=43, PRINT=44, NULL=45, COMMENT=46, SEMI_COLON=47, COLON=48, 
		COMMA=49, HASH_KEY=50, IF=51, THEN=52, ELSE=53, ENDIF=54, WHILE=55, DONE=56, 
		DO=57, FOR=58, BREAK=59, CONTINUE=60, NEWPAIR=61, FST=62, SND=63, CALL=64, 
		STRING_LITER=65, WS=66, END_OF_STRING=67, NEWLINE=68, TAB=69, CARRIAGE_RETURN=70, 
		FORM_FEED=71, DOUBLE_QUOTES=72, BACKSLASH=73, WHITESPACE=74, APOSTROPHE=75, 
		IDENTITY=76, CHAR_LITER=77;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'", "'4'", "'5'", "'6'", "'7'", "'8'", "'9'", "':'", "';'", 
		"'<'", "'='", "'>'", "'?'", "'@'", "'A'", "'B'", "'C'", "'D'", "'E'", 
		"'F'", "'G'", "'H'", "'I'", "'J'", "'K'", "'L'", "'M'"
	};
	public static final String[] ruleNames = {
		"PLUS", "MINUS", "MUL", "DIV", "MOD", "EQUAL", "PLUSEQUAL", "MINUSEQUAL", 
		"GREATER_EQUAL", "GREATER", "LESS_EQUAL", "LESS", "DOUBLE_EQUALS", "NOT_EQUAL", 
		"AND", "OR", "NOT", "LEN", "ORD", "CHR", "PLUSPLUS", "MINUSMINUS", "TRUE", 
		"FALSE", "INT", "BOOL", "CHAR", "STRING", "PAIR", "OPEN_PARENTHESES", 
		"CLOSE_PARENTHESES", "OPEN_SQUARE", "CLOSE_SQUARE", "DIGIT", "INTEGER", 
		"BEGIN", "END", "IS", "SKIP", "READ", "FREE", "RETURN", "EXIT", "PRINTLN", 
		"PRINT", "NULL", "COMMENT", "SEMI_COLON", "COLON", "COMMA", "HASH_KEY", 
		"IF", "THEN", "ELSE", "ENDIF", "WHILE", "DONE", "DO", "FOR", "BREAK", 
		"CONTINUE", "NEWPAIR", "FST", "SND", "CALL", "STRING_LITER", "WS", "END_OF_STRING", 
		"NEWLINE", "TAB", "CARRIAGE_RETURN", "FORM_FEED", "DOUBLE_QUOTES", "BACKSLASH", 
		"WHITESPACE", "APOSTROPHE", "ANY_CHAR", "ID_BEGIN_CHAR", "ID_CHAR", "IDENTITY", 
		"CHAR_LITER"
	};


	public WACCLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "WACCLexer.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2O\u01f7\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\3\2\3\2\3\3"+
		"\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3"+
		"\n\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\17\3\20\3"+
		"\20\3\20\3\21\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3"+
		"\24\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3"+
		"\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\33\3\33\3"+
		"\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3"+
		"\35\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3$\6"+
		"$\u0112\n$\r$\16$\u0113\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3\'\3\'\3\'\3(\3"+
		"(\3(\3(\3(\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3+\3+\3,\3,\3"+
		",\3,\3,\3-\3-\3-\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3\60"+
		"\3\60\7\60\u0153\n\60\f\60\16\60\u0156\13\60\3\60\3\60\3\60\3\60\3\61"+
		"\3\61\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\65\3\66\3\66\3\66\3\66"+
		"\3\66\3\67\3\67\3\67\3\67\3\67\38\38\38\39\39\39\39\39\39\3:\3:\3:\3:"+
		"\3:\3;\3;\3;\3<\3<\3<\3<\3=\3=\3=\3=\3=\3=\3>\3>\3>\3>\3>\3>\3>\3>\3>"+
		"\3?\3?\3?\3?\3?\3?\3?\3?\3@\3@\3@\3@\3A\3A\3A\3A\3B\3B\3B\3B\3B\3C\3C"+
		"\7C\u01ac\nC\fC\16C\u01af\13C\3C\7C\u01b2\nC\fC\16C\u01b5\13C\5C\u01b7"+
		"\nC\3C\3C\3D\6D\u01bc\nD\rD\16D\u01bd\3D\3D\3E\3E\3E\3F\3F\3F\3G\3G\3"+
		"G\3H\3H\3H\3I\3I\3I\3J\3J\3J\3K\3K\3L\3L\3M\3M\3N\3N\3N\3N\3N\3N\3N\3"+
		"N\3N\3N\3N\5N\u01e5\nN\3O\3O\3P\3P\5P\u01eb\nP\3Q\3Q\7Q\u01ef\nQ\fQ\16"+
		"Q\u01f2\13Q\3R\3R\3R\3R\4\u0154\u01ad\2S\3\3\5\4\7\5\t\6\13\7\r\b\17\t"+
		"\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27"+
		"-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E\2G$I%K&M\'O(Q)S*U+"+
		"W,Y-[.]/_\60a\61c\62e\63g\64i\65k\66m\67o8q9s:u;w<y={>}?\177@\u0081A\u0083"+
		"B\u0085C\u0087D\u0089E\u008bF\u008dG\u008fH\u0091I\u0093J\u0095K\u0097"+
		"L\u0099M\u009b\2\u009d\2\u009f\2\u00a1N\u00a3O\3\2\5\5\2\13\f\17\17\""+
		"\"\5\2$$))^^\5\2C\\aac|\u0203\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t"+
		"\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2"+
		"\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2"+
		"\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2"+
		"+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2"+
		"\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2"+
		"C\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3"+
		"\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2"+
		"\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2"+
		"k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3"+
		"\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2"+
		"\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b"+
		"\3\2\2\2\2\u008d\3\2\2\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2"+
		"\2\2\u0095\3\2\2\2\2\u0097\3\2\2\2\2\u0099\3\2\2\2\2\u00a1\3\2\2\2\2\u00a3"+
		"\3\2\2\2\3\u00a5\3\2\2\2\5\u00a7\3\2\2\2\7\u00a9\3\2\2\2\t\u00ab\3\2\2"+
		"\2\13\u00ad\3\2\2\2\r\u00af\3\2\2\2\17\u00b1\3\2\2\2\21\u00b4\3\2\2\2"+
		"\23\u00b7\3\2\2\2\25\u00ba\3\2\2\2\27\u00bc\3\2\2\2\31\u00bf\3\2\2\2\33"+
		"\u00c1\3\2\2\2\35\u00c4\3\2\2\2\37\u00c7\3\2\2\2!\u00ca\3\2\2\2#\u00cd"+
		"\3\2\2\2%\u00cf\3\2\2\2\'\u00d3\3\2\2\2)\u00d7\3\2\2\2+\u00db\3\2\2\2"+
		"-\u00de\3\2\2\2/\u00e1\3\2\2\2\61\u00e6\3\2\2\2\63\u00ec\3\2\2\2\65\u00f0"+
		"\3\2\2\2\67\u00f5\3\2\2\29\u00fa\3\2\2\2;\u0101\3\2\2\2=\u0106\3\2\2\2"+
		"?\u0108\3\2\2\2A\u010a\3\2\2\2C\u010c\3\2\2\2E\u010e\3\2\2\2G\u0111\3"+
		"\2\2\2I\u0115\3\2\2\2K\u011b\3\2\2\2M\u011f\3\2\2\2O\u0122\3\2\2\2Q\u0127"+
		"\3\2\2\2S\u012c\3\2\2\2U\u0131\3\2\2\2W\u0138\3\2\2\2Y\u013d\3\2\2\2["+
		"\u0145\3\2\2\2]\u014b\3\2\2\2_\u0150\3\2\2\2a\u015b\3\2\2\2c\u015d\3\2"+
		"\2\2e\u015f\3\2\2\2g\u0161\3\2\2\2i\u0163\3\2\2\2k\u0166\3\2\2\2m\u016b"+
		"\3\2\2\2o\u0170\3\2\2\2q\u0173\3\2\2\2s\u0179\3\2\2\2u\u017e\3\2\2\2w"+
		"\u0181\3\2\2\2y\u0185\3\2\2\2{\u018b\3\2\2\2}\u0194\3\2\2\2\177\u019c"+
		"\3\2\2\2\u0081\u01a0\3\2\2\2\u0083\u01a4\3\2\2\2\u0085\u01a9\3\2\2\2\u0087"+
		"\u01bb\3\2\2\2\u0089\u01c1\3\2\2\2\u008b\u01c4\3\2\2\2\u008d\u01c7\3\2"+
		"\2\2\u008f\u01ca\3\2\2\2\u0091\u01cd\3\2\2\2\u0093\u01d0\3\2\2\2\u0095"+
		"\u01d3\3\2\2\2\u0097\u01d5\3\2\2\2\u0099\u01d7\3\2\2\2\u009b\u01e4\3\2"+
		"\2\2\u009d\u01e6\3\2\2\2\u009f\u01ea\3\2\2\2\u00a1\u01ec\3\2\2\2\u00a3"+
		"\u01f3\3\2\2\2\u00a5\u00a6\7-\2\2\u00a6\4\3\2\2\2\u00a7\u00a8\7/\2\2\u00a8"+
		"\6\3\2\2\2\u00a9\u00aa\7,\2\2\u00aa\b\3\2\2\2\u00ab\u00ac\7\61\2\2\u00ac"+
		"\n\3\2\2\2\u00ad\u00ae\7\'\2\2\u00ae\f\3\2\2\2\u00af\u00b0\7?\2\2\u00b0"+
		"\16\3\2\2\2\u00b1\u00b2\7-\2\2\u00b2\u00b3\7?\2\2\u00b3\20\3\2\2\2\u00b4"+
		"\u00b5\7/\2\2\u00b5\u00b6\7?\2\2\u00b6\22\3\2\2\2\u00b7\u00b8\7@\2\2\u00b8"+
		"\u00b9\7?\2\2\u00b9\24\3\2\2\2\u00ba\u00bb\7@\2\2\u00bb\26\3\2\2\2\u00bc"+
		"\u00bd\7>\2\2\u00bd\u00be\7?\2\2\u00be\30\3\2\2\2\u00bf\u00c0\7>\2\2\u00c0"+
		"\32\3\2\2\2\u00c1\u00c2\7?\2\2\u00c2\u00c3\7?\2\2\u00c3\34\3\2\2\2\u00c4"+
		"\u00c5\7#\2\2\u00c5\u00c6\7?\2\2\u00c6\36\3\2\2\2\u00c7\u00c8\7(\2\2\u00c8"+
		"\u00c9\7(\2\2\u00c9 \3\2\2\2\u00ca\u00cb\7~\2\2\u00cb\u00cc\7~\2\2\u00cc"+
		"\"\3\2\2\2\u00cd\u00ce\7#\2\2\u00ce$\3\2\2\2\u00cf\u00d0\7n\2\2\u00d0"+
		"\u00d1\7g\2\2\u00d1\u00d2\7p\2\2\u00d2&\3\2\2\2\u00d3\u00d4\7q\2\2\u00d4"+
		"\u00d5\7t\2\2\u00d5\u00d6\7f\2\2\u00d6(\3\2\2\2\u00d7\u00d8\7e\2\2\u00d8"+
		"\u00d9\7j\2\2\u00d9\u00da\7t\2\2\u00da*\3\2\2\2\u00db\u00dc\7-\2\2\u00dc"+
		"\u00dd\7-\2\2\u00dd,\3\2\2\2\u00de\u00df\7/\2\2\u00df\u00e0\7/\2\2\u00e0"+
		".\3\2\2\2\u00e1\u00e2\7v\2\2\u00e2\u00e3\7t\2\2\u00e3\u00e4\7w\2\2\u00e4"+
		"\u00e5\7g\2\2\u00e5\60\3\2\2\2\u00e6\u00e7\7h\2\2\u00e7\u00e8\7c\2\2\u00e8"+
		"\u00e9\7n\2\2\u00e9\u00ea\7u\2\2\u00ea\u00eb\7g\2\2\u00eb\62\3\2\2\2\u00ec"+
		"\u00ed\7k\2\2\u00ed\u00ee\7p\2\2\u00ee\u00ef\7v\2\2\u00ef\64\3\2\2\2\u00f0"+
		"\u00f1\7d\2\2\u00f1\u00f2\7q\2\2\u00f2\u00f3\7q\2\2\u00f3\u00f4\7n\2\2"+
		"\u00f4\66\3\2\2\2\u00f5\u00f6\7e\2\2\u00f6\u00f7\7j\2\2\u00f7\u00f8\7"+
		"c\2\2\u00f8\u00f9\7t\2\2\u00f98\3\2\2\2\u00fa\u00fb\7u\2\2\u00fb\u00fc"+
		"\7v\2\2\u00fc\u00fd\7t\2\2\u00fd\u00fe\7k\2\2\u00fe\u00ff\7p\2\2\u00ff"+
		"\u0100\7i\2\2\u0100:\3\2\2\2\u0101\u0102\7r\2\2\u0102\u0103\7c\2\2\u0103"+
		"\u0104\7k\2\2\u0104\u0105\7t\2\2\u0105<\3\2\2\2\u0106\u0107\7*\2\2\u0107"+
		">\3\2\2\2\u0108\u0109\7+\2\2\u0109@\3\2\2\2\u010a\u010b\7]\2\2\u010bB"+
		"\3\2\2\2\u010c\u010d\7_\2\2\u010dD\3\2\2\2\u010e\u010f\4\62;\2\u010fF"+
		"\3\2\2\2\u0110\u0112\5E#\2\u0111\u0110\3\2\2\2\u0112\u0113\3\2\2\2\u0113"+
		"\u0111\3\2\2\2\u0113\u0114\3\2\2\2\u0114H\3\2\2\2\u0115\u0116\7d\2\2\u0116"+
		"\u0117\7g\2\2\u0117\u0118\7i\2\2\u0118\u0119\7k\2\2\u0119\u011a\7p\2\2"+
		"\u011aJ\3\2\2\2\u011b\u011c\7g\2\2\u011c\u011d\7p\2\2\u011d\u011e\7f\2"+
		"\2\u011eL\3\2\2\2\u011f\u0120\7k\2\2\u0120\u0121\7u\2\2\u0121N\3\2\2\2"+
		"\u0122\u0123\7u\2\2\u0123\u0124\7m\2\2\u0124\u0125\7k\2\2\u0125\u0126"+
		"\7r\2\2\u0126P\3\2\2\2\u0127\u0128\7t\2\2\u0128\u0129\7g\2\2\u0129\u012a"+
		"\7c\2\2\u012a\u012b\7f\2\2\u012bR\3\2\2\2\u012c\u012d\7h\2\2\u012d\u012e"+
		"\7t\2\2\u012e\u012f\7g\2\2\u012f\u0130\7g\2\2\u0130T\3\2\2\2\u0131\u0132"+
		"\7t\2\2\u0132\u0133\7g\2\2\u0133\u0134\7v\2\2\u0134\u0135\7w\2\2\u0135"+
		"\u0136\7t\2\2\u0136\u0137\7p\2\2\u0137V\3\2\2\2\u0138\u0139\7g\2\2\u0139"+
		"\u013a\7z\2\2\u013a\u013b\7k\2\2\u013b\u013c\7v\2\2\u013cX\3\2\2\2\u013d"+
		"\u013e\7r\2\2\u013e\u013f\7t\2\2\u013f\u0140\7k\2\2\u0140\u0141\7p\2\2"+
		"\u0141\u0142\7v\2\2\u0142\u0143\7n\2\2\u0143\u0144\7p\2\2\u0144Z\3\2\2"+
		"\2\u0145\u0146\7r\2\2\u0146\u0147\7t\2\2\u0147\u0148\7k\2\2\u0148\u0149"+
		"\7p\2\2\u0149\u014a\7v\2\2\u014a\\\3\2\2\2\u014b\u014c\7p\2\2\u014c\u014d"+
		"\7w\2\2\u014d\u014e\7n\2\2\u014e\u014f\7n\2\2\u014f^\3\2\2\2\u0150\u0154"+
		"\7%\2\2\u0151\u0153\13\2\2\2\u0152\u0151\3\2\2\2\u0153\u0156\3\2\2\2\u0154"+
		"\u0155\3\2\2\2\u0154\u0152\3\2\2\2\u0155\u0157\3\2\2\2\u0156\u0154\3\2"+
		"\2\2\u0157\u0158\7\f\2\2\u0158\u0159\3\2\2\2\u0159\u015a\b\60\2\2\u015a"+
		"`\3\2\2\2\u015b\u015c\7=\2\2\u015cb\3\2\2\2\u015d\u015e\7<\2\2\u015ed"+
		"\3\2\2\2\u015f\u0160\7.\2\2\u0160f\3\2\2\2\u0161\u0162\7%\2\2\u0162h\3"+
		"\2\2\2\u0163\u0164\7k\2\2\u0164\u0165\7h\2\2\u0165j\3\2\2\2\u0166\u0167"+
		"\7v\2\2\u0167\u0168\7j\2\2\u0168\u0169\7g\2\2\u0169\u016a\7p\2\2\u016a"+
		"l\3\2\2\2\u016b\u016c\7g\2\2\u016c\u016d\7n\2\2\u016d\u016e\7u\2\2\u016e"+
		"\u016f\7g\2\2\u016fn\3\2\2\2\u0170\u0171\7h\2\2\u0171\u0172\7k\2\2\u0172"+
		"p\3\2\2\2\u0173\u0174\7y\2\2\u0174\u0175\7j\2\2\u0175\u0176\7k\2\2\u0176"+
		"\u0177\7n\2\2\u0177\u0178\7g\2\2\u0178r\3\2\2\2\u0179\u017a\7f\2\2\u017a"+
		"\u017b\7q\2\2\u017b\u017c\7p\2\2\u017c\u017d\7g\2\2\u017dt\3\2\2\2\u017e"+
		"\u017f\7f\2\2\u017f\u0180\7q\2\2\u0180v\3\2\2\2\u0181\u0182\7h\2\2\u0182"+
		"\u0183\7q\2\2\u0183\u0184\7t\2\2\u0184x\3\2\2\2\u0185\u0186\7d\2\2\u0186"+
		"\u0187\7t\2\2\u0187\u0188\7g\2\2\u0188\u0189\7c\2\2\u0189\u018a\7m\2\2"+
		"\u018az\3\2\2\2\u018b\u018c\7e\2\2\u018c\u018d\7q\2\2\u018d\u018e\7p\2"+
		"\2\u018e\u018f\7v\2\2\u018f\u0190\7k\2\2\u0190\u0191\7p\2\2\u0191\u0192"+
		"\7w\2\2\u0192\u0193\7g\2\2\u0193|\3\2\2\2\u0194\u0195\7p\2\2\u0195\u0196"+
		"\7g\2\2\u0196\u0197\7y\2\2\u0197\u0198\7r\2\2\u0198\u0199\7c\2\2\u0199"+
		"\u019a\7k\2\2\u019a\u019b\7t\2\2\u019b~\3\2\2\2\u019c\u019d\7h\2\2\u019d"+
		"\u019e\7u\2\2\u019e\u019f\7v\2\2\u019f\u0080\3\2\2\2\u01a0\u01a1\7u\2"+
		"\2\u01a1\u01a2\7p\2\2\u01a2\u01a3\7f\2\2\u01a3\u0082\3\2\2\2\u01a4\u01a5"+
		"\7e\2\2\u01a5\u01a6\7c\2\2\u01a6\u01a7\7n\2\2\u01a7\u01a8\7n\2\2\u01a8"+
		"\u0084\3\2\2\2\u01a9\u01b6\7$\2\2\u01aa\u01ac\13\2\2\2\u01ab\u01aa\3\2"+
		"\2\2\u01ac\u01af\3\2\2\2\u01ad\u01ae\3\2\2\2\u01ad\u01ab\3\2\2\2\u01ae"+
		"\u01b7\3\2\2\2\u01af\u01ad\3\2\2\2\u01b0\u01b2\5\u009bN\2\u01b1\u01b0"+
		"\3\2\2\2\u01b2\u01b5\3\2\2\2\u01b3\u01b1\3\2\2\2\u01b3\u01b4\3\2\2\2\u01b4"+
		"\u01b7\3\2\2\2\u01b5\u01b3\3\2\2\2\u01b6\u01ad\3\2\2\2\u01b6\u01b3\3\2"+
		"\2\2\u01b7\u01b8\3\2\2\2\u01b8\u01b9\7$\2\2\u01b9\u0086\3\2\2\2\u01ba"+
		"\u01bc\t\2\2\2\u01bb\u01ba\3\2\2\2\u01bc\u01bd\3\2\2\2\u01bd\u01bb\3\2"+
		"\2\2\u01bd\u01be\3\2\2\2\u01be\u01bf\3\2\2\2\u01bf\u01c0\bD\2\2\u01c0"+
		"\u0088\3\2\2\2\u01c1\u01c2\7^\2\2\u01c2\u01c3\7\62\2\2\u01c3\u008a\3\2"+
		"\2\2\u01c4\u01c5\7^\2\2\u01c5\u01c6\7p\2\2\u01c6\u008c\3\2\2\2\u01c7\u01c8"+
		"\7^\2\2\u01c8\u01c9\7v\2\2\u01c9\u008e\3\2\2\2\u01ca\u01cb\7^\2\2\u01cb"+
		"\u01cc\7t\2\2\u01cc\u0090\3\2\2\2\u01cd\u01ce\7^\2\2\u01ce\u01cf\7h\2"+
		"\2\u01cf\u0092\3\2\2\2\u01d0\u01d1\7^\2\2\u01d1\u01d2\7$\2\2\u01d2\u0094"+
		"\3\2\2\2\u01d3\u01d4\7^\2\2\u01d4\u0096\3\2\2\2\u01d5\u01d6\7\"\2\2\u01d6"+
		"\u0098\3\2\2\2\u01d7\u01d8\7)\2\2\u01d8\u009a\3\2\2\2\u01d9\u01e5\n\3"+
		"\2\2\u01da\u01e5\5\u0089E\2\u01db\u01e5\5\u008bF\2\u01dc\u01e5\5\u008d"+
		"G\2\u01dd\u01e5\5\u008fH\2\u01de\u01e5\5\u0091I\2\u01df\u01e5\5\u0093"+
		"J\2\u01e0\u01e5\5\u0095K\2\u01e1\u01e5\5\u0097L\2\u01e2\u01e3\7^\2\2\u01e3"+
		"\u01e5\7)\2\2\u01e4\u01d9\3\2\2\2\u01e4\u01da\3\2\2\2\u01e4\u01db\3\2"+
		"\2\2\u01e4\u01dc\3\2\2\2\u01e4\u01dd\3\2\2\2\u01e4\u01de\3\2\2\2\u01e4"+
		"\u01df\3\2\2\2\u01e4\u01e0\3\2\2\2\u01e4\u01e1\3\2\2\2\u01e4\u01e2\3\2"+
		"\2\2\u01e5\u009c\3\2\2\2\u01e6\u01e7\t\4\2\2\u01e7\u009e\3\2\2\2\u01e8"+
		"\u01eb\5\u009dO\2\u01e9\u01eb\4\62;\2\u01ea\u01e8\3\2\2\2\u01ea\u01e9"+
		"\3\2\2\2\u01eb\u00a0\3\2\2\2\u01ec\u01f0\5\u009dO\2\u01ed\u01ef\5\u009f"+
		"P\2\u01ee\u01ed\3\2\2\2\u01ef\u01f2\3\2\2\2\u01f0\u01ee\3\2\2\2\u01f0"+
		"\u01f1\3\2\2\2\u01f1\u00a2\3\2\2\2\u01f2\u01f0\3\2\2\2\u01f3\u01f4\5\u0099"+
		"M\2\u01f4\u01f5\5\u009bN\2\u01f5\u01f6\5\u0099M\2\u01f6\u00a4\3\2\2\2"+
		"\f\2\u0113\u0154\u01ad\u01b3\u01b6\u01bd\u01e4\u01ea\u01f0\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}